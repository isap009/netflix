{"version":3,"sources":["axios.js","Row.js","api.js","Banner.js","Nav.js","Login.js","App.js","reportWebVitals.js","reducer.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchURL","isLargeRow","useState","movies","setMovies","trailerURL","setTrailerURL","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","console","log","catch","err","handleClick","src","poster_path","backdrop_path","alt","videoId","opts","height","width","playerVars","autoplay","API_KEY","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchDocumentaries","fetchRomanceMovies","Banner","str","n","result","Math","floor","random","length","table","ceil","style","backgroundSize","backgroundImage","backgroundPosition","overview","substr","Nav","handleShow","setHandleShow","window","addEventListener","scrollY","removeEventListener","Login","dispatch","useDispatch","user","setUser","type","placeholder","onChange","e","target","value","preventDefault","payload","App","users","useSelector","state","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","todos","filter","todo","id","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8441cd61.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst instance=axios.create({\r\nbaseURL:\"https://api.themoviedb.org/3\",\r\n}\r\n);\r\n\r\nexport default instance;","import React, { useState,useEffect } from 'react'\r\nimport axios from \"./axios\"\r\nimport \"./Row.css\";\r\nimport Youtube from \"react-youtube\"\r\nimport movieTrailer from \"movie-trailer\"\r\nconst baseURL=\"https://image.tmdb.org/t/p/original/\";\r\nfunction Row({title,fetchURL,isLargeRow}) {\r\n    const [movies, setMovies] = useState([])\r\n    const [trailerURL, setTrailerURL] = useState(\"\")\r\n     useEffect(() => {\r\n       async function fetchData(){\r\n           const request=await axios.get(fetchURL)\r\n        //    console.log(request)\r\n           setMovies(request.data.results)\r\n           return request\r\n       }\r\n       fetchData()\r\n      \r\n    }, [fetchURL])\r\n    const opts = {\r\n        height: '390',\r\n        width: '100%',\r\n        playerVars: {\r\n          // https://developers.google.com/youtube/player_parameters\r\n          autoplay: 1,\r\n        },\r\n      };\r\n      const handleClick=(movie)=>{\r\n          \r\n          if(trailerURL){\r\n              setTrailerURL(\"\")\r\n          }\r\n          else{\r\n              movieTrailer(movie?.name || \"\")\r\n              .then((url)=>{\r\n                const urlParams = new URLSearchParams(new URL(url).search);\r\n                setTrailerURL(urlParams.get('v'));\r\n                console.log(urlParams)\r\n              })\r\n              .catch(err=>console.log(err))\r\n          }\r\n      };\r\n    return (\r\n        <div className=\"row\">\r\n            <h1>{title}</h1>\r\n            <div className={`row_posters ${isLargeRow && \"row_poster_large\"}`}>\r\n                {movies.map(movie=>(\r\n                    <img className=\"row-poster\" onClick={()=>{handleClick(movie)}} src={`${baseURL}${isLargeRow ?  movie.poster_path : movie.backdrop_path}`} alt={movie.name}></img>\r\n                ))}\r\n            </div>\r\n         {trailerURL &&   <Youtube videoId={trailerURL} opts={opts}></Youtube>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","const API_KEY=\"9dc28e24ccccb025fe158ba06a59eaac\"\r\nconst request={\r\n    fetchTrending:`/trending/api/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals:`/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated:`/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchDocumentaries:`/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n    fetchRomanceMovies:`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n}\r\nexport default request;","import axios from './axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport request from \"./api\"\r\nimport \"./Banner.css\";\r\nconst baseURL=\"https://image.tmdb.org/t/p/original/\";\r\nfunction Banner() {\r\n    const [movies, setMovies] = useState([])\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const result=await axios.get(request.fetchNetflixOriginals)\r\n            setMovies(result.data.results[Math.floor(Math.random(result.data.results.length -1)*10)])\r\n            console.table(Math.ceil(Math.random(result.data.results.length - 1)))\r\n            console.log(Math.random(result.data.results.length - 1))\r\n        }\r\n        fetchData()\r\n\r\n    }, [])\r\n    function truncate(str,n){\r\n        return str?.length > n ? str.substr(0,n-1) +\" ...\" : str;\r\n    }\r\n    return (\r\n        \r\n            <header className=\"banner\"\r\n            style={{\r\n                backgroundSize:\"cover\",\r\n                backgroundImage:`url(https://image.tmdb.org/t/p/original/${movies?.backdrop_path})`,\r\n                backgroundPosition:\"center center\",\r\n                \r\n                }}>\r\n            <div className=\"banner_contents\">\r\n                \r\n            <h1 className=\"banner_title\">{movies.name}</h1>\r\n\r\n                \r\n            <div className=\"banner_buttons\">\r\n            <button className=\"banner_button\">Play</button>\r\n            <button className=\"banner_button\">My List</button>\r\n            </div>\r\n            <div className=\"banner_description\">\r\n                <h1>{truncate(movies?.overview,150)}</h1>\r\n            </div>\r\n            </div>\r\n            {/* <img src={ `${baseURL}${movies.poster_path}`}></img> */}\r\n            </header>\r\n        \r\n    )\r\n}\r\nexport default Banner\r\n","import React, { useEffect, useState } from 'react'\r\nimport \"./Nav.css\";\r\nfunction Nav({name}) {\r\n    const [handleShow, setHandleShow] = useState(false)\r\n    \r\n    useEffect(()=>{\r\n      \r\n    \r\n        window.addEventListener(\"scroll\",()=>{\r\n            if(window.scrollY>100){\r\n                setHandleShow(true);\r\n            }\r\n            else setHandleShow(false);\r\n        });\r\n        return ()=>{\r\n            window.removeEventListener(\"scroll\");\r\n        }\r\n    },[])\r\n    return (\r\n        <div className={`nav ${handleShow && \"nav-black\" }`}>\r\n            <img className=\"nav-logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/799px-Netflix_2015_logo.svg.png\" alt=\"Netflix Logo\"></img>\r\n            <p className=\"welcome\"> Welcome {name} !</p>\r\n            <img className=\"nav-avtar\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\" alt=\"Avtar\"></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n ","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport \"./Login.css\"\r\nfunction Login() {\r\n    const dispatch = useDispatch()\r\n    const [user, setUser] = useState(\"\")\r\n    const handleClick=(e)=>{\r\n        e.preventDefault();\r\n        dispatch({\r\n            type:'Add_TODO',\r\n            payload:user,\r\n                \r\n        })\r\n\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n            <img className=\"nav-logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/799px-Netflix_2015_logo.svg.png\" alt=\"Netflix Logo\"></img>   \r\n\r\n           \r\n               <form  className=\"login-form\">\r\n           <input type=\"text\" placeholder=\"Enter your Name\" onChange={(e)=>setUser(e.target.value)}></input>  \r\n           \r\n            <button  onClick={(e)=>handleClick(e)}>Sign In</button>\r\n           </form>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React,{useState} from 'react'\nimport Row from './Row';\nimport request from \"./api\";\nimport Banner from './Banner';\nimport Payment from './Payment';\nimport \"./App.css\";\nimport Nav from './Nav';\nimport Login from './Login';\nimport { useSelector } from 'react-redux';\nfunction App() {\n  const [user, setUser] = useState(\"\")\n\n  const users = useSelector(state => state.users)\n  \n  return (\n    <div className=\"app\">\n    \n    {users ?\n    (\n      <>\n              <Nav name={users}/>\n      <Banner></Banner>\n      <Row title=\"Netflix\" fetchURL={request.fetchNetflixOriginals}></Row>\n      <Row title=\"Trending now\" fetchURL={request.fetchTrending} isLargeRow></Row>\n      <Row title=\"Top Rated\" fetchURL={request.fetchTopRated}></Row>\n      <Row title=\"Romance Movies\" fetchURL={request.fetchRomanceMovies}></Row>\n      <Row title=\"Horror Movies\" fetchURL={request.fetchHorrorMovies}></Row>\n      <Row title=\"Documentries\" fetchURL={request.fetchDocumentaries}></Row>\n      <Row title=\"Comedy Movies\" fetchURL={request.fetchComedyMovies}></Row>\n      <Row title=\"Actions Movies\" fetchURL={request.fetchActionMovies}></Row>\n      </>\n    ):\n    (<Login/>)}\n   \n    \n\n    \n     \n      \n    \n \n     \n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initialState={\r\n        users:\"\",\r\n};\r\nexport const actionTypes={\r\n    SET_DATA:\"SET_DATA\",\r\n};\r\nconst reducer=(state=initialState,action)=>{\r\n        console.log(action);\r\n        switch(action.type){\r\n            case 'Add_TODO':\r\n                return{\r\n                    ...state,\r\n                       users:action.payload,\r\n                };\r\n            case 'Delete_TODO':\r\n                return {\r\n                    ...state,\r\n                    todos: state.todos.filter(todo=>todo.id!== action.payload),\r\n                }    \r\n            \r\n                default:\r\n                    return state;\r\n        }\r\n};\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport reducer from \"./reducer\"\nconst store=createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}