{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\netflix-clone\\\\src\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"./axios\";\nimport \"./Row.css\";\nconst baseURL = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({\n  title,\n  fetchURL,\n  isLargeRow\n}) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchURL);\n      console.log(request);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchURL]);\n  console.table(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `row_posters ${isLargeRow && 'row_poster_large'}`,\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"row-poster\",\n      src: `${baseURL}${isLargeRow ? movie.backdrop_path : movie.poster_path}`,\n      alt: movie.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["E:/netflix-clone/src/Row.js"],"names":["React","useState","useEffect","axios","baseURL","Row","title","fetchURL","isLargeRow","movies","setMovies","fetchData","request","get","console","log","data","results","table","map","movie","backdrop_path","poster_path","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;AACA,MAAMC,OAAO,GAAC,sCAAd;;AACA,SAASC,GAAT,CAAa;AAACC,EAAAA,KAAD;AAAOC,EAAAA,QAAP;AAAgBC,EAAAA;AAAhB,CAAb,EAA0C;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAECC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeS,SAAf,GAA0B;AACtB,YAAMC,OAAO,GAAC,MAAMT,KAAK,CAACU,GAAN,CAAUN,QAAV,CAApB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAF,MAAAA,SAAS,CAACE,OAAO,CAACI,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOL,OAAP;AACH;;AACDD,IAAAA,SAAS;AAEX,GATS,EASP,CAACJ,QAAD,CATO,CAAT;AAUDO,EAAAA,OAAO,CAACI,KAAR,CAAcT,MAAd;AACA,sBAEQ;AAAK,IAAA,SAAS,EAAG,eAAcD,UAAU,IAAI,kBAAmB,EAAhE;AAAA,cACKC,MAAM,CAACU,GAAP,CAAWC,KAAK,iBACb;AAAK,MAAA,SAAS,EAAC,YAAf;AAA6B,MAAA,GAAG,EAAG,GAAEhB,OAAQ,GAAEI,UAAU,GAAIY,KAAK,CAACC,aAAV,GAA0BD,KAAK,CAACE,WAAY,EAArG;AAAwG,MAAA,GAAG,EAAEF,KAAK,CAACG;AAAnH;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UAFR;AASH;;GAvBQlB,G;;KAAAA,G;AAyBT,eAAeA,GAAf","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport axios from \"./axios\"\r\nimport \"./Row.css\";\r\nconst baseURL=\"https://image.tmdb.org/t/p/original/\";\r\nfunction Row({title,fetchURL,isLargeRow}) {\r\n    const [movies, setMovies] = useState([])\r\n    \r\n     useEffect(() => {\r\n       async function fetchData(){\r\n           const request=await axios.get(fetchURL)\r\n           console.log(request)\r\n           setMovies(request.data.results)\r\n           return request\r\n       }\r\n       fetchData()\r\n      \r\n    }, [fetchURL])\r\n    console.table(movies)\r\n    return (\r\n      \r\n            <div className={`row_posters ${isLargeRow && 'row_poster_large'}`}>\r\n                {movies.map(movie=>(\r\n                    <img className=\"row-poster\"  src={`${baseURL}${isLargeRow ?  movie.backdrop_path : movie.poster_path}`} alt={movie.name}></img>\r\n                ))}\r\n            </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Row\r\n"]},"metadata":{},"sourceType":"module"}